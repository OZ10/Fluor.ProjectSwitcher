<Controls:Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Fluor.ProjectSwitcher"          
        xmlns:View="clr-namespace:Fluor.ProjectSwitcher.View"
        xmlns:Controls="clr-namespace:Fluor.WPF.Resources.Controls;assembly=Fluor.WPF.Resources"
        xmlns:Converters="clr-namespace:Fluor.WPF.Resources.Converters;assembly=Fluor.WPF.Resources"
        xmlns:Class="clr-namespace:Fluor.ProjectSwitcher.Class"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"  x:Class="Fluor.ProjectSwitcher.MainWindow"
        Title="" MaxHeight="900" MinHeight="280" MinWidth="370" MouseLeftButtonDown="Window_MouseLeftButtonDown" Style="{StaticResource WindowStyleApp}" Closing="Window_Closing">
    <Window.DataContext>
        <Binding Mode="OneWay" Path="Main" Source="{StaticResource Locator}"/>
    </Window.DataContext>

    <Window.Resources>

        <Converters:InverseBoolConverter x:Key="InverseBoolConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style x:Key="MetroBreadCrumbButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush3}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="ToolTip" Value="{Binding MiscText}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Grid.ContextMenu>
                                <ContextMenu ItemsSource="{Binding CombinedContextMenuCollection}" >
                                    <!--<ContextMenu.ItemTemplate>
                                        <DataTemplate>
                                            <MenuItem Header="{Binding Name}" CommandParameter="{Binding Value}" Icon="{DynamicResource ContextMenuIcon_Path}"/>
                                        </DataTemplate>
                                    </ContextMenu.ItemTemplate>
                                    <ContextMenu.ItemContainerStyle>
                                        <Style TargetType="{x:Type MenuItem}">
                                            <EventSetter Event="MenuItem.Click" Handler="muBreadCrumb_Click"/>
                                        </Style>
                                    </ContextMenu.ItemContainerStyle>-->
                                </ContextMenu>
                            </Grid.ContextMenu>

                            <!--<Border BorderBrush="White" BorderThickness="2,0,0,0" Margin="4"/>-->
                            <Path Width="15" Height="15" Fill="#DDFFFFFF" Stretch="Uniform" Margin="5,0,5,0" Data="F1 M 39.8307,37.6042L 36.6641,34.4375L 25.1849,23.3542L 35.4766,23.3542L 50.5182,37.6042L 35.4766,51.8542L 25.1849,51.8542L 36.6641,40.7708L 39.8307,37.6042 Z "/>
                            <Rectangle x:Name="rectanglebg" Fill="{DynamicResource SubColorBrush}" Opacity="0" StrokeThickness="0" Grid.Column="1" RadiusX="2" RadiusY="2"/>
                            <TextBlock x:Name="txtProjectName" Foreground="#DDFFFFFF" Text="{Binding Name}" VerticalAlignment="Center" FontSize="22" FontWeight="Bold" HorizontalAlignment="Left" Grid.Column="1"/>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.3" From="#DDFFFFFF" To="{StaticResource SubColor}" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="txtProjectName"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.3" From="{StaticResource SubColor}" To="#DDFFFFFF" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="txtProjectName"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="txtProjectName" Value="0.3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <EventSetter Event="ButtonBase.Click" Handler="btnBack_Click"/>
        </Style>

        <DataTemplate x:Key="MetroBreadCrumbButton" DataType="Button">
            <Button Style="{DynamicResource MetroBreadCrumbButtonStyle}" />
        </DataTemplate>

        <Style x:Key="ThemeButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <!--<Setter Property="Padding" Value="15"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="recTop" Fill="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type Control}, Mode=FindAncestor}}" StrokeThickness="0" Opacity="1"/>
                            <Rectangle x:Name="recBottom" Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Control}, Mode=FindAncestor}}" StrokeThickness="0" Opacity="1" Grid.Row="1"/>
                            <Border x:Name="border" BorderBrush="White" Opacity="0" Grid.RowSpan="2" BorderThickness="2"/>
                            <TextBlock Grid.Column="1" Text="{Binding ToolTip, RelativeSource={RelativeSource TemplatedParent}}" Foreground="Black" Grid.RowSpan="2" Margin="10,0,0,0" FontSize="12" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="border"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="border"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
   
        <HierarchicalDataTemplate DataType="{x:Type Class:Project}" ItemsSource="{Binding Path=SubItems}">
            <MenuItem Header="{Binding Name}" ItemsSource="{Binding SubItems}"/>
        </HierarchicalDataTemplate>
    </Window.Resources>
    
    <Controls:Window.TitleBarButtons>
        <DockPanel>
            <Button x:Name="btnSettings" Click="btnSettings_Click" Content="{StaticResource MenuIcon}" BorderBrush="{x:Null}" ToolTip="Settings" Visibility="{Binding MainViewButtonsVisibility}"/>
            <Button x:Name="btnHome" Grid.Column="1" Content="{StaticResource HomeIcon}" Click="btnHome_Click" ToolTip="Home" Visibility="{Binding MainViewButtonsVisibility}">
                <Button.ContextMenu>
                    <ContextMenu ItemsSource="{Binding ProjectSwitcherSettings.Projects}"/>
                </Button.ContextMenu>
            </Button>
            <ItemsControl ItemsSource="{Binding BreadcrumbCollection}" ItemTemplate="{DynamicResource MetroBreadCrumbButton}" VerticalAlignment="Center" Grid.Column="2" Visibility="{Binding MainViewButtonsVisibility}"  IsEnabled="{Binding IsOpen, Converter={StaticResource InverseBoolConverter}, ElementName=flySettings}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </DockPanel>
    </Controls:Window.TitleBarButtons>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!--<Grid Background="{DynamicResource HighlightBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="btnSettings" Click="btnSettings_Click" Content="{StaticResource MenuIcon}" BorderBrush="{x:Null}" Style="{DynamicResource StandardButtonStyleWhite}" ToolTip="Settings" Visibility="{Binding MainViewButtonsVisibility}"/>
            <Button x:Name="btnHome" Grid.Column="1" Style="{DynamicResource StandardButtonStyleWhite}" Content="{StaticResource HomeIcon}" Click="btnHome_Click" ToolTip="Home" Visibility="{Binding MainViewButtonsVisibility}">
                <Button.ContextMenu>
                    <ContextMenu ItemsSource="{Binding ProjectSwitcherSettings.Projects}"/>
                </Button.ContextMenu>
            </Button>
            <ItemsControl ItemsSource="{Binding BreadcrumbCollection}" ItemTemplate="{DynamicResource MetroBreadCrumbButton}" VerticalAlignment="Center" Grid.Column="2" Visibility="{Binding MainViewButtonsVisibility}"  IsEnabled="{Binding IsOpen, Converter={StaticResource InverseBoolConverter}, ElementName=flySettings}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
            <Button x:Name="btnMinimise" Content="{StaticResource MinimiseIcon}" BorderBrush="{x:Null}" Style="{DynamicResource StandardButtonStyleWhite}" Grid.Column="3" ToolTip="Minimise" VerticalAlignment="Bottom" Click="btnMinimise_Click" Margin="0,15,0,0"/>
            <Button x:Name="btnClose" Content="{StaticResource CloseIcon}" BorderBrush="{x:Null}" Style="{DynamicResource StandardButtonStyleSpin}" Grid.Column="4" Click="btnClose_Click" ToolTip="Close" Foreground="White" Background="Transparent"/>
        </Grid>-->

        <Rectangle Grid.Row="0" Grid.RowSpan="3" Fill="{DynamicResource WindowBackgroundColorBrush}" Width="Auto"/>

        <View:V_Tiles Grid.Row="0" Margin="0,10,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding IsTileTabSelected, Converter={StaticResource BooleanToVisibilityConverter}}" IsEnabled="{Binding IsOpen, Converter={StaticResource InverseBoolConverter}, ElementName=flySettings}" />
        <View:V_Applications Grid.Row="0" Margin="0,10,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding IsApplicationsTabSelected, Converter={StaticResource BooleanToVisibilityConverter}}"  IsEnabled="{Binding IsOpen, Converter={StaticResource InverseBoolConverter}, ElementName=flySettings}"/>
        <View:V_Edit Grid.Row="0" Margin="0,10,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding IsAddNewTabSelected, Converter={StaticResource BooleanToVisibilityConverter}}" IsEnabled="{Binding IsOpen, Converter={StaticResource InverseBoolConverter}, ElementName=flySettings}"/>
        <View:V_EditApplications Grid.Row="0" Margin="0,10,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding IsEditApplicationsTabSelected, Converter={StaticResource BooleanToVisibilityConverter}}" IsEnabled="{Binding IsOpen, Converter={StaticResource InverseBoolConverter}, ElementName=flySettings}"/>

        <Button x:Name="btnOpenProject" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2" Click="btnOpenProject_Click" Width="60" Height="60" ToolTip="Switch Project" Content="{DynamicResource SwitchProjectIcon}" Foreground="White" Background="{DynamicResource SubColorBrush}" RenderTransformOrigin="0.5,0.5" Margin="10" Visibility="{Binding MainViewButtonsVisibility}" IsEnabled="{Binding IsOpen, Converter={StaticResource InverseBoolConverter}, ElementName=flySettings}">
            <Button.Style>
                <Style TargetType="Button" BasedOn="{StaticResource StandardButtonStyleSpin}">
                    <Setter Property="Button.Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="Gray" Direction="320" ShadowDepth="3" BlurRadius="5" Opacity="0.5"/>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>

        <local:StatusWindow x:Name="StatusWindow" Grid.RowSpan="4" Grid.ColumnSpan="4" Visibility="Hidden"/>

        <Controls:Flyout Name="flySettings" Grid.RowSpan="3" Header="Settings">
            <Grid Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="20"/>
                </Grid.RowDefinitions>
                <TabControl TabStripPlacement="Top">
                    <TabItem Header="File" FontSize="14">
                        <StackPanel HorizontalAlignment="Left">
                            <Controls:ButtonWithText x:Name="miViewSettingsFile" Grid.Row="0" Click="miViewSettingsFile_Click" FontSize="12" Content="{Binding Mode=OneWay, Source={StaticResource SettingsIcon}}" ButtonText="Open"/>
                            <Controls:ButtonWithText x:Name="miLoadSettingsFile" Grid.Row="1" Click="miLoadSettingsFile_Click" FontSize="12" Content="{Binding Mode=OneWay, Source={StaticResource LoadIcon}}" ButtonText="Load"/>
                            <Controls:ButtonWithText x:Name="miExportSettingsFile" Grid.Row="2" Click="miExportSettingsFile_Click" FontSize="12" Content="{Binding Mode=OneWay, Source={StaticResource ExportIcon}}" ButtonText="Export"/>
                        </StackPanel>

                    </TabItem>
                    <TabItem Header="Apps" FontSize="14">
                        <Controls:ButtonWithText x:Name="miEditApps" Click="miEditApps_Click" FontSize="12" Content="{Binding Mode=OneWay, Source={StaticResource EditIcon}}" ButtonText="Add / Edit" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    </TabItem>
                    <TabItem Header="Themes" FontSize="14">
                        <StackPanel VerticalAlignment="Top" HorizontalAlignment="Left">
                            <Button Name="ThemeDefault" Height="20" Style="{DynamicResource ThemeButtonStyle}" Background="#FF595959" Foreground="#FF00A8CD" Margin="3" Click="Theme_Click" Tag="/Themes/Accents_Original.xaml" ToolTip="Default"/>
                            <Button Name="ThemeFluor" Height="20" Style="{DynamicResource ThemeButtonStyle}" Background="#FF003872" Foreground="#000000" Margin="3" Click="Theme_Click" Tag="/Themes/Accents_Fluor.xaml" ToolTip="Fluor"/>
                            <Button Name="ThemeWinter" Height="20" Style="{DynamicResource ThemeButtonStyle}" Background="#607D8B" Foreground="#0091EA" Margin="3" Click="Theme_Click" Tag="/Themes/Accents_Winter.xaml" ToolTip="Winter"/>
                            <Button Name="ThemeSpring" Height="20" Style="{DynamicResource ThemeButtonStyle}" Background="#33691E" Foreground="#F9A825" Margin="3" Click="Theme_Click" Tag="/Themes/Accents_Spring.xaml" ToolTip="Spring"/>
                            <Button Name="ThemeSummer" Height="20" Style="{DynamicResource ThemeButtonStyle}" Background="#0277BD" Foreground="#FF6F00" Margin="3" Click="Theme_Click" Tag="/Themes/Accents_Summer.xaml" ToolTip="Summer"/>
                            <Button Name="ThemeAutumn" Height="20" Style="{DynamicResource ThemeButtonStyle}" Background="#795548" Foreground="#FF3D00" Margin="3" Click="Theme_Click" Tag="/Themes/Accents_Autumn.xaml" ToolTip="Autumn"/>
                        </StackPanel>
                    </TabItem>
                    <TabItem Header="Misc" FontSize="14">
                        <StackPanel HorizontalAlignment="Left">
                            <Controls:ButtonWithText x:Name="miRefresh" Grid.Row="0" Click="miRefresh_Click" FontSize="12" Content="{Binding Mode=OneWay, Source={StaticResource RefreshIcon}}" ButtonText="Refresh After Changes"/>
                            <Controls:ButtonWithText x:Name="miCloseAllApps" Grid.Row="0" Click="miCloseAllApps_Click" FontSize="12" Content="{Binding Mode=OneWay, Source={StaticResource CloseIcon}}" ButtonText="Close All Open Apps"/>
                            <!--<Controls:ButtonWithText x:Name="miResetSize" Grid.Row="0" Click="miResetSize_Click" FontSize="12" Content="{Binding Mode=OneWay, Source={StaticResource RestoreIcon}}" ButtonText="Reset Window Size"/>-->
                        </StackPanel>
                    </TabItem>
                </TabControl>

                <TextBlock Grid.Row="9" Text="{Binding Version}" VerticalAlignment="Bottom" HorizontalAlignment="Center" Foreground="{DynamicResource TextBlack54Brush}" FontSize="12"/>
            </Grid>
        </Controls:Flyout>
    </Grid>
</Controls:Window>
