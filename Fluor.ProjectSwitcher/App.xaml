<Application xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:Fluor.ProjectSwitcher" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"  xmlns:Custom="http://metro.mahapps.com/winfx/xaml/shared" x:Class="Fluor.ProjectSwitcher.App" StartupUri="MainWindow.xaml" d1p1:Ignorable="d"  >
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />-->
                <ResourceDictionary Source="Themes/Fluor_Accents.xaml" />
                <ResourceDictionary Source="Themes/Fluor_Icons.xaml" />
                <ResourceDictionary Source="Themes/Fluor_CustomControlStyles.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="MetroTileCustom" TargetType="{x:Type Button}">
                <!--BasedOn="{StaticResource {x:Type Button}}">-->
                <!--<Setter Property="Background" Value="Aqua"/>-->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid Margin="0,0,0,7" Width="350" MouseRightButtonUp="tile_MouseRightButtonUp">
                                <!--Background="{TemplateBinding Background}">-->
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="10"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="50"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="50"/>
                                </Grid.RowDefinitions>

                                <Grid.ContextMenu>
                                    <ContextMenu>
                                        <!--ItemTemplateSelector="{DynamicResource MenuItemTemplateSelector}" >-->
                                        <ContextMenu.ItemTemplate>
                                            <DataTemplate>
                                                <MenuItem Header="{Binding DisplayName}" CommandParameter="{Binding Value}">
                                                    <MenuItem.Icon>
                                                        <Path Data="{DynamicResource Folder}" Style="{DynamicResource MenuItemIcon}"/>
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                            </DataTemplate>
                                        </ContextMenu.ItemTemplate>
                                        <ContextMenu.ItemContainerStyle>
                                            <Style TargetType="{x:Type MenuItem}">
                                                <EventSetter Event="MenuItem.Click" Handler="muProject_Click"/>
                                                <!--<Setter Property="MenuItem.IsEnabled" Value="{Binding IsEnabled}"/>-->
                                            </Style>
                                        </ContextMenu.ItemContainerStyle>
                                    </ContextMenu>
                                </Grid.ContextMenu>

                                <Rectangle x:Name="rec1" Fill="White" Grid.RowSpan="2"/>
                                <Rectangle x:Name="rec2" Fill="{DynamicResource SubColorBrush}" Grid.RowSpan="2" Opacity="0"/>
                                <Border BorderBrush="#33000000" BorderThickness="1,0,0,1"/>
                                <!--<ContentPresenter Content="{DynamicResource ProjectIcon}" Margin="10" Grid.RowSpan="2"/>-->
                                <Rectangle Fill="White" Margin="2,0,0,0" Grid.Column="1" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
                                <Border BorderBrush="#33000000" BorderThickness="0,0,0,1" Grid.Column="1" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
                                <StackPanel Grid.Column="1" VerticalAlignment="Center">
                                    <TextBlock Text="{Binding Name}" VerticalAlignment="Center" Margin="10,0,0,0" FontWeight="Normal" FontSize="20" />
                                    <TextBlock Text="{Binding MiscText}" VerticalAlignment="Center" Margin="10,4,0,4" FontWeight="Normal" FontSize="12" Visibility="{Binding MiscTextVisibility}" Foreground="{DynamicResource TextBlack54Brush}"/>
                                </StackPanel>
                                <ContentPresenter Content="{DynamicResource EditIcon}" Margin="15" Grid.RowSpan="2" Grid.Column="2" Visibility="{Binding IsEditMode}"/>
                                <Button Name="btnEdit" Content="{DynamicResource EditIcon}" Margin="10" Grid.RowSpan="2" Grid.Column="2" Style="{DynamicResource MetroCircleButtonStyleCustomBlack}" Opacity="0" Visibility="{Binding IsEditMode}" Click="btnEdit_Click"/>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleY="0.98" ScaleX="0.98"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>

                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.3" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="rec2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="rec2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>

                                <Trigger Property="IsMouseOver" Value="True" SourceName="btnEdit">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <!--<ColorAnimation Duration="0:0:0.3" To="Aquamarine" Storyboard.TargetProperty="(Button.Foreground).Color" Storyboard.TargetName="btnEdit"/>-->
                                                <DoubleAnimation Duration="0:0:0.3" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="btnEdit"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="btnEdit"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>

                                <!--<Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="rec1" Property="Fill" Value="{DynamicResource SubColorBrush}"/>
                                </Trigger>-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="ApplicationListTemplate">
                <Grid Margin="5,0,5,10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock x:Name="tbApplicationName" Text="{Binding Name}" MouseRightButtonDown="tbApplicationName_MouseRightButtonDown" Margin="0,0,0,1" Padding="5" Background="White" FontSize="18" FontWeight="Normal" Foreground="Black">
                        <TextBlock.ContextMenu>
                            <ContextMenu ItemsSource="{Binding ContextMenuCollection}">
                                <ContextMenu.ItemTemplate>
                                    <DataTemplate>
                                        <MenuItem Header="{Binding DisplayName}" CommandParameter="{Binding Value}"/>
                                    </DataTemplate>
                                </ContextMenu.ItemTemplate>
                                <ContextMenu.ItemContainerStyle>
                                    <Style TargetType="{x:Type MenuItem}">
                                        <EventSetter Event="MenuItem.Click" Handler="muProject_Click"/>
                                    </Style>
                                </ContextMenu.ItemContainerStyle>
                            </ContextMenu>
                        </TextBlock.ContextMenu>
                    </TextBlock>

                    <Border BorderBrush="#33000000" BorderThickness="1,0,0,1" Margin="0,0,0,1"/>
                    <ListBox Grid.Row="1" ItemsSource="{Binding SubItems}" BorderBrush="{DynamicResource AccentColorBrush4}" BorderThickness="1,0,0,0" ItemContainerStyle="{DynamicResource MetroListboxItemCustom}">
                        <!--Background="{DynamicResource AccentColorBrush4}"-->
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <CheckBox Content="{Binding Name}" IsChecked="{Binding IsSelected}" Visibility="{Binding Visibility}" Padding="5" FontSize="14" Foreground="{DynamicResource TextBlack87Brush}">
                                    <CheckBox.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem x:Name="miSelectAll" Header="select all" Click="MenuItem_Click" Icon="{DynamicResource PlusIcon}"/>
                                            <MenuItem x:Name="miSelectNone" Header="select none" Click="MenuItem_Click" Icon="{DynamicResource MinusIcon}"/>
                                            <MenuItem x:Name="miSelectOnlyThis" Header="select only this" Click="MenuItem_Click" Icon="{DynamicResource SelectThisOnlyIcon}"/>
                                            <MenuItem x:Name="miSelectAllExceptThis" Header="select all except this" Click="MenuItem_Click" Icon="{DynamicResource SelectAllExceptThisIcon}"/>
                                        </ContextMenu>
                                    </CheckBox.ContextMenu>
                                </CheckBox>

                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <Border Grid.Row="1" BorderBrush="#33000000" BorderThickness="1,0,0,1"/>
                </Grid>
            </ControlTemplate>

            <Style x:Key="MetroListboxItemCustom" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MetroListBoxItem}">
                <Setter Property="Visibility" Value="{Binding Visibility}"/>
                <Setter Property="IsSelected" Value="{Binding IsActive}"/>
                <Setter Property="IsEnabled" Value="{Binding IsEnabled}"/>
            </Style>

            <vm:ViewModelLocator xmlns:vm="clr-namespace:Fluor.ProjectSwitcher.ViewModel" x:Key="Locator" d:IsDataSource="True" />

            <Style x:Key="MetroBreadCrumbButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush3}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="ToolTip" Value="{Binding MiscText}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <!--<Border BorderBrush="White" BorderThickness="2,0,0,0" Margin="4"/>-->
                                <Path Width="15" Height="15" Fill="#DDFFFFFF" Stretch="Uniform" Margin="5,0,5,0" Data="F1 M 39.8307,37.6042L 36.6641,34.4375L 25.1849,23.3542L 35.4766,23.3542L 50.5182,37.6042L 35.4766,51.8542L 25.1849,51.8542L 36.6641,40.7708L 39.8307,37.6042 Z "/>
                                <Rectangle x:Name="rectanglebg" Fill="{DynamicResource SubColorBrush}" Opacity="0" StrokeThickness="0" Grid.Column="1" RadiusX="2" RadiusY="2"/>
                                <TextBlock x:Name="txtProjectName" Foreground="#DDFFFFFF" Text="{Binding Name}" VerticalAlignment="Center" FontSize="22" FontWeight="Bold" HorizontalAlignment="Left" Grid.Column="1"/>

                                <Grid.ContextMenu>
                                    <ContextMenu ItemsSource="{Binding ContextMenuCollection}">
                                        <ContextMenu.ItemTemplate>
                                            <DataTemplate>
                                                <MenuItem Header="{Binding DisplayName}" CommandParameter="{Binding Value}"/>
                                            </DataTemplate>
                                        </ContextMenu.ItemTemplate>
                                        <ContextMenu.ItemContainerStyle>
                                            <Style TargetType="{x:Type MenuItem}">
                                                <EventSetter Event="MenuItem.Click" Handler="muProject_Click"/>
                                            </Style>
                                        </ContextMenu.ItemContainerStyle>
                                    </ContextMenu>
                                </Grid.ContextMenu>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.3" From="#DDFFFFFF" To="{StaticResource SubColor}" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="txtProjectName"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.3" From="{StaticResource SubColor}" To="#DDFFFFFF" Storyboard.TargetProperty="(TextBlock.Foreground).Color" Storyboard.TargetName="txtProjectName"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource GrayBrush7}"/>
                                    <Setter Property="Opacity" TargetName="rectanglebg" Value="0.3"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <EventSetter Event="Click" Handler="btnBack_Click"/>
            </Style>

            <ControlTemplate x:Key="NewTileTemplate">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBox Text="{Binding Name}" FontSize="20" FontWeight="Bold" Background="{x:Null}" BorderBrush="{x:Null}"/>

                    <Grid Margin="0,0,5,0" Grid.Row="1" Background="White">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="3"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="3"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <!--<TextBox Grid.Column="1" Text="{Binding Name}"/>-->
                        <TextBlock Text="ContextMenus" FontSize="12" VerticalAlignment="Center" Margin="5,0,0,0"/>
                        <Button Name="btnAddnewContextMenu" Grid.Column="1" Style="{DynamicResource MetroCircleButtonStyleCustom}" Content="{DynamicResource PlusIcon}" Foreground="{DynamicResource TextBlack54Brush}" Click="btnAddnewContextMenu_Click"/>
                        <DataGrid Grid.Column="3" ItemsSource="{Binding ContextMenuCollection}" FontSize="12" ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyleCustom}"/>
                        <TextBlock Text="Misc Text" Grid.Row="4" FontSize="12" Margin="5,10,0,0" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="4" Grid.Column="3" Text="{Binding MiscText}" FontSize="12" Margin="0,10,0,0" BorderThickness="0,0,0,2" />
                        <Rectangle Grid.Column="2" Grid.RowSpan="6" Fill="{DynamicResource AccentColorBrush4}"/>
                        <Rectangle Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="3" Fill="{DynamicResource AccentColorBrush4}"/>
                    </Grid>

                    <!--<Rectangle Fill="{DynamicResource AccentSelectedColorBrush}" Grid.Row="2" Height="10"/>-->
                    <TextBlock Text="Associations" Grid.Row="2" FontStyle="Italic" FontSize="18" VerticalAlignment="Bottom"/>

                    <Grid Margin="0,0,5,10" Grid.Row="3" Background="White">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="3"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="15"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="3"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <TextBlock Text="Applications" FontSize="12" VerticalAlignment="Center" Margin="5,0,0,0"/>
                        <Button Name="btnAddAssociatedApplication" Grid.Column="1" Style="{DynamicResource MetroCircleButtonStyleCustom}" Content="{DynamicResource PlusIcon}" Foreground="{DynamicResource TextBlack54Brush}" Click="btnAddAssociatedApplication_Click" />
                        <ListBox Name="lstAssociation" Grid.Column="3" ItemsSource="{Binding Associations}" DisplayMemberPath="ApplicationName" SelectedItem="{Binding SelectedAssociation}" FontSize="12"/>

                        <TextBlock Text="ContextMenus" Grid.Row="2" FontSize="12" VerticalAlignment="Center" Margin="0,10,0,0"/>
                        <DataGrid Grid.Row="2" Grid.Column="3" ItemsSource="{Binding SelectedAssociation.ContextMenuCollection}" FontSize="12"/>

                        <TextBlock Text="Parameters" Grid.Row="4" FontSize="12" VerticalAlignment="Center" Margin="0,10,0,0"/>
                        <DataGrid Grid.Row="4" Grid.Column="3" ItemsSource="{Binding SelectedAssociation.Parameters}" FontSize="12"/>

                        <Rectangle Grid.Column="2" Grid.RowSpan="6" Fill="{DynamicResource AccentColorBrush4}"/>
                        <Rectangle Grid.ColumnSpan="4" Grid.Row="1" Fill="{DynamicResource AccentColorBrush4}"/>
                        <Rectangle Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="3" Fill="{DynamicResource AccentColorBrush4}"/>

                        <!--<DataGrid Grid.Column="1" Grid.Row="1" ItemsSource="{Binding ContextMenuCollection}"/>
                        <Button Name="btnAddnewContextMenu" Grid.Row="3" Grid.Column="1" Content="{DynamicResource PlusIcon}" Click="btnAddnewContextMenu_Click"/>
                        <Label Content="Misc Text" Grid.Row="4"/>
                        <TextBox  Grid.Row="4" Grid.Column="1" Text="{Binding MiscText}"/>-->
                    </Grid>

                    <Button Name="btnEditOk" Grid.Row="4" Style="{DynamicResource MetroCircleButtonStyleCustom}" Content="{DynamicResource TickIcon}" Height="50" Width="50" Margin="0,20,80,0" Click="btnEditOk_Click" Background="{DynamicResource SubColorBrush}"/>
                    <Button Grid.Row="4" Style="{DynamicResource MetroCircleButtonStyleCustom}" Content="{DynamicResource CloseIcon}" Height="50" Width="50" Margin="80,20,0,0" Background="{DynamicResource SubColorBrush}"/>
                </Grid>
            </ControlTemplate>

            <DataTemplate x:Key="ListViewItemWithEditButton" DataType="ListViewItem">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="{Binding DisplayName}" VerticalAlignment="Center"/>
                    <Button Margin="0,0,10,0" Grid.Column="1" Width="40" Height="40" VerticalAlignment="Center" Content="{DynamicResource EditIcon}" Style="{DynamicResource MetroCircleButtonStyleCustomSpin}" Foreground="Black"  />
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </Application.Resources>
</Application>